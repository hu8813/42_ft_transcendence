services:
  backend:
    container_name: backend
    restart: on-failure:5
    build:
      context: backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/usr/src/app/
      - ./certs:/etc/ssl/certs
    ports:
      - '8000:8000'
    env_file:
      - .env

  postgres:
    container_name: postgres
    image: postgres:latest
    restart: on-failure:5
    volumes:
      - database-postgres:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    env_file:
      - .env

  nginx:
    container_name: nginx
    restart: on-failure:5
    build:
      context: ./src/nginx
      dockerfile: Dockerfile
    ports:
#      - "8080:80"
      - "8443:443"
    volumes:
      - ./frontend:/etc/frontend
      - ./certs:/etc/nginx/ssl
    depends_on:
      - backend

  # prometheus:
  #   container_name: prometheus
  #   build: ./src/prometheus
  #   image: prometheus
  #   volumes:
  #     - prometheus:/volumes/prometheus
  #   ports:
  #     - '9090:9090'
  #   networks:
  #     - transcendence
  #   env_file:
  #     - .env
  #   restart: unless-stopped
  # grafana:
  #   container_name: grafana
  #   build: ./src/grafana
  #   image: grafana
  #   ports:
  #     - 3000:3000
  #   volumes:
  #     - grafana:/volumes/grafana
  #   networks:
  #     - transcendence
  #   env_file:
  #     - .env
  #   restart: unless-stopped

volumes:
  cert-volumes:
  database-postgres:
  prometheus:
    name: prometheus
    driver: local
    driver_opts:
      device: ${VOLUME_PATH}/prometheus
      o: bind
      type: none
  grafana:
    name: grafana
    driver: local
    driver_opts:
      device: ${VOLUME_PATH}/grafana
      o: bind
      type: none
      
networks:
  transcendence:
    name: transcendence
    driver: bridge
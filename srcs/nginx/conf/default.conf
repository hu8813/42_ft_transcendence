server {
    listen 443 ssl;
    listen [::]:443 ssl;

    server_name localhost 127.0.0.1;

    ssl_certificate /etc/nginx/ssl/localhost.crt;
    ssl_certificate_key /etc/nginx/ssl/localhost.key;

    ssl_protocols TLSv1.2 TLSv1.3;

    location / {
        root        /etc/frontend;
        index       index.html;
        try_files   $uri $uri/ /index.html =404;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";

        error_page 403 = @redirect_403;
    }

    location /api {
        proxy_pass https://backend:8000;
        client_max_body_size 5M;
        proxy_set_header jwt-access $http_jwt;
        error_page 400 = @return_400;
        error_page 403 = @return_403;
        error_page 405 = @return_405;
        error_page 500 = @return_500;
    }

    location /media {
        proxy_pass https://backend:8000/media;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /wss {
        proxy_pass https://backend:8001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
    }

        location /ws {
            proxy_pass http://backend:8001;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /wsapi {
            proxy_pass http://backend:8001;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

    location @return_400 {
        internal;
        return 400 "Anomaly detected by the firewall, request too large";
    }

    location @return_403 {
        internal;
        return 403 "Anomaly detected by the firewall, malicious input";
    }

    location @return_405 {
        internal;
        return 405 "Anomaly detected by the firewall, method not allowed";
    }

    location @return_500 {
        internal;
        return 500 "Anomaly detected by the firewall, unexpected error";
    }

    location @redirect_403 {
        internal;
        root /etc/nginx/modsec/;
        rewrite ^ /error.html break;
    }
}
